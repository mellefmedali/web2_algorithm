
FUNCTION dot_product(VAR v1, v2 : ARRAY_OF FLOAT [2]) : FLOAT
VAR
    i : INTEGER;
    ps : FLOAT;
BEGIN
    ps = 0 ;
    FOR i FROM 0 TO v1.length-1 STEP 1  DO
            ps:= v1[i]*v2[i];
    END_FOR
    RETURN ps ;
END

ALGORITHM orthogonal
VAR
    let v1, v2 : ARRAY_OF FLOAT [2];
    n : INTEGER;
BEGIN
    Read("saisir le nombre de pair de vecteurs", n);
    VAR ort : ARRAY_OF FLOAT [n];
    FOR i FROM 0 TO n-1 STEP 1  DO
        Write("introduire les cordonnées du premier vercteur V1 du pair numéro" + (i+1));
        Read("v1", v1);    
        Write("introduire les cordonnées du deuxième vercteur V2"  + (i+1));
        Read("v2", v2);
        ps := dot_product(v1, v2);
        ort[i] := ps;
    END_FOR
    FOR i FROM 0 to n-1 DO
        IF (ort[i]=0) THEN
            Write("les deux vecteurs du pair numéro"  + (i+1) + "sont orthogonaux")
            ELSE
            Write("les deux vecteurs du pair numéro"  + (i+1) + "ne sont pas orthogonaux")
        END_IF
    END_FOR


END